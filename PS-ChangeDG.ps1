#Generated Form Function
function GenerateForm {
########################################################################
# Created On: 16-1-2015 20:03
# Created By: Armand Hatting
########################################################################

#region constants
$IconBase64 = @"
iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
YQUAAAAJcEhZcwAADsQAAA7EAZUrDhsAAAAhdEVYdENyZWF0aW9uIFRpbWUAMjAxNTowNDowMyAxNDow
ODo0NPkCcP0AAL+PSURBVHhe7J0HYBvZcfdnF70QJNg7RYpU79eL787ndq5x7ylObOezYzuxEzu24ziO
HffeS+y4+/q5+4ruTtLpTuXURapQlNjETpDoHdj93ix2dRBFSQSwABfA/JLnxe5COmHL+8+bN28GCIIg
CIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIg
CIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIg
CIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCCJnOHlL
EITGufv4mPS+ciCyLcfV2dxcvS0EovQe66VjopjkRemzyHFgYNsE12D3sDbHPiM21oysJeV9BR37a2Js
G5T2pgM14nSwSgRRL4oQx/8E+48mROB0Avvvs/0E/iPYd6wwG3Sy/xg7xv6PfQHesqmVnScIQuss6AQI
glgO7u0d44SUjHIbG8Y5EUyorzp2SseO8Zsax3n2urJ9M2sR1kys4XmB94RNxnGfvSqQMDiicd6REHRW
psWs8WZR5C2iKFrYd43MPtCBKLA/o2ON40UOP6O080l2XmBGQZIdTjIZZ/tcjOO4MMcJYQ6ECAdcSM8n
QyaD4LPr474WR8BTZYkyi4Fnf45j34+yZmYtgn9X8thUi8CzP8j+evy78LzYO90q8uwXogHxZjISCGLZ
IQOAIArI3ccneBT6TQ1TbKTORJgN1+vtUV2j3adno3gDG1mzrU4/6jFVjvkqWsIJY7Mg8E0iCDXDHkfN
XMRcE40ba5ICX8sE3sH+jgr2Ept1bLzPzAfgpa36LzaqNfu3gsD+ByU8iVum9kzM/UznfTpecJkMsbka
c2RuRZVvjgN+jueFSYs+NtHq8I+3V0W9zBZIsN/IWiI+HXAkpgKmJPvXJpiRIfRON0qehbdubkajgSCI
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
"@
$howto = @" 
The tool allows you to change certain attributes for Distributiongroups/lists in an on-premises 
Active Directory when you use Office365 and no longer have an on-premises Exchange Organization.
Changes will be synchronized towards Office 365 on the next Directory Synchronization.

Tool Requirements:
- Windows PowerShell version 2
- Read/Write access to the AD attributes (below)
- Active Directory Module for PowerShell


Tool information:
Input field
Enter the samaccountname/groupname of the user/group you want to add or remove. 1 per line (use enter)
or
Use "File - Open" to open a CSV with the samaccountname (the CSV should have 1 header -> samaccountname , 1 UPN per line, no commas needed)

Sample CSV:
samaccountname
john.doe
jane.doe

Use the corresponding buttons to perform the action in Active Directory. 


AD attributes that can be changed with this tool:
authOrig: List of senders (users, not groups) that are allowed to send to the DL
unAuthOrig: List of senders (users, not groups) to BLOCK from sending to the DL
dlMemRejectPerms: Used in place of unAuthOrig when using security groups
dlMemSubmitPerms: Used in place of authOrig when using security groups
"@

$about = @"
Change DG/DL attributes
Version: 1.0

Created by: Armand Hatting
Created on: 16-1-2015 20:03
"@

#endregion

#region Import the Assemblies
[reflection.assembly]::loadwithpartialname("System.Drawing") | Out-Null
[reflection.assembly]::loadwithpartialname("System.Windows.Forms") | Out-Null
[System.Reflection.Assembly]::LoadWithPartialName('Microsoft.VisualBasic') | Out-Null
#endregion

#region Generated Form Objects
$form1 = New-Object System.Windows.Forms.Form
$GBlockBox = New-Object System.Windows.Forms.RichTextBox
$ownerLabel = New-Object System.Windows.Forms.Label
$ownerBox = New-Object System.Windows.Forms.RichTextBox
$inputBoxLabel = New-Object System.Windows.Forms.Label
$checkButton = New-Object System.Windows.Forms.Button
$RemGroupBlockButton = New-Object System.Windows.Forms.Button
$RemGroupAllowButton = New-Object System.Windows.Forms.Button
$RemUserBlockButton = New-Object System.Windows.Forms.Button
$RemUserAllowButton = New-Object System.Windows.Forms.Button
$AddgroupBlockButton = New-Object System.Windows.Forms.Button
$AddGroupAllowButton = New-Object System.Windows.Forms.Button
$AddUserBlockButton = New-Object System.Windows.Forms.Button
$AddUserAllowButton = New-Object System.Windows.Forms.Button
$inputBox = New-Object System.Windows.Forms.RichTextBox
$statusBar = New-Object System.Windows.Forms.StatusBar
$GBlockLabel = New-Object System.Windows.Forms.Label
$GAllowLabel = New-Object System.Windows.Forms.Label
$UBlockLabel = New-Object System.Windows.Forms.Label
$UAllowLabel = New-Object System.Windows.Forms.Label
$GAllowBox = New-Object System.Windows.Forms.RichTextBox
$UBlockBox = New-Object System.Windows.Forms.RichTextBox
$UAllowBox = New-Object System.Windows.Forms.RichTextBox
$fetchButton = New-Object System.Windows.Forms.Button
$listBox = New-Object System.Windows.Forms.TextBox
$InitialFormWindowState = New-Object System.Windows.Forms.FormWindowState
$mainMenu = new-object System.Windows.Forms.MenuStrip
$fileMenuItem = new-object System.Windows.Forms.ToolStripMenuItem
$openMenuItem = new-object System.Windows.Forms.ToolStripMenuItem
$helpMenuItem = new-object System.Windows.Forms.ToolStripMenuItem
$usageMenuItem = new-object System.Windows.Forms.ToolStripMenuItem
$aboutMenuItem = new-object System.Windows.Forms.ToolStripMenuItem
$DCButton = New-Object System.Windows.Forms.Button
$DCBox = New-Object System.Windows.Forms.ComboBox
$iconStream=[System.IO.MemoryStream][System.Convert]::FromBase64String($IconBase64)
$iconBmp=[System.Drawing.Bitmap][System.Drawing.Image]::FromStream($iconStream)
$iconHandle=$iconBmp.GetHicon()
$DSMIcon=[System.Drawing.Icon]::FromHandle($iconHandle)

#endregion Generated Form Objects

#region functions

function Get-object{
param([switch]$dg)

#quick check 
if($DCBox.Text -eq ""){
$server=$false
}
else{
$server=$true
}

#main function
if(($server -eq $true) -and ($dg -eq $true)){
$server= $DCBox.Text
	try{
		$output = Get-ADObject -Filter {samaccountname -eq $listBox.Text} -Properties authOrig,unAuthOrig,dlMemSubmitPerms,dlMemRejectPerms,managedby -server ($server).trim()
	}
	catch{
		[System.Windows.Forms.MessageBox]::Show($Error[0], "Error",[Windows.Forms.MessageBoxButtons]::OK, [Windows.Forms.MessageBoxIcon]::Error )
	}#end catch

return $output
}
elseif(($server -eq $true) -and ($dg -eq $false)){
$server= $DCBox.Text
$input = $inputBox.Text.split('',[System.StringSplitOptions]::RemoveEmptyEntries)
$inputBox.Clear()
$output=@()
	try{
		foreach($object in $input){
			$props = Get-ADObject -Filter {samaccountname -eq $object} -Properties distinguishedName,name,displayname,samaccountname,objectclass -server ($server).trim()
			$properties = New-Object psobject
			$properties | Add-Member NoteProperty "distinguishedName" ($props.distinguishedName)
			$properties | Add-Member NoteProperty "name" ($props.name)
			$properties | Add-Member NoteProperty "displayname" ($props.displayname)
			$properties | Add-Member NoteProperty "samaccountname" ($props.samaccountname)
			$properties | Add-Member NoteProperty "objectclass" ($props.objectclass -replace "(CN=)(.*?),.*",'$2')
			$output += $properties
			}#end foreach
		}#end try
	catch{
		[System.Windows.Forms.MessageBox]::Show($Error[0], "Error",[Windows.Forms.MessageBoxButtons]::OK, [Windows.Forms.MessageBoxIcon]::Error )
		}#end catch
return $output
}
elseif(($server -eq $false) -and ($dg -eq $true)){
	try{
		$output = Get-ADObject -Filter {samaccountname -eq $listBox.Text} -Properties authOrig,unAuthOrig,dlMemSubmitPerms,dlMemRejectPerms,managedby
	}
	catch{
		[System.Windows.Forms.MessageBox]::Show($Error[0], "Error",[Windows.Forms.MessageBoxButtons]::OK, [Windows.Forms.MessageBoxIcon]::Error )
	}#end catch

return $output
}

else{ #both are $false
$input = $inputBox.Text.split('',[System.StringSplitOptions]::RemoveEmptyEntries)
$inputBox.Clear()
$output=@()
	try{
		foreach($object in $input){
			$props = Get-ADObject -Filter {samaccountname -eq $object} -Properties distinguishedName,name,displayname,samaccountname,objectclass
			$properties = New-Object psobject
			$properties | Add-Member NoteProperty "distinguishedName" ($props.distinguishedName)
			$properties | Add-Member NoteProperty "name" ($props.name)
			$properties | Add-Member NoteProperty "displayname" ($props.displayname)
			$properties | Add-Member NoteProperty "samaccountname" ($props.samaccountname)
			$properties | Add-Member NoteProperty "objectclass" ($props.objectclass -replace "(CN=)(.*?),.*",'$2')
			$output += $properties
			}#end foreach
		}#end try
	catch{
		[System.Windows.Forms.MessageBox]::Show($Error[0], "Error",[Windows.Forms.MessageBoxButtons]::OK, [Windows.Forms.MessageBoxIcon]::Error )
		}#end catch
return $output
}


}


Function Load-ComboBox {
<#
    .SYNOPSIS
        This functions helps you load items into a ComboBox.

    .DESCRIPTION
        Use this function to dynamically load items into the ComboBox control.

    .PARAMETER  ComboBox
        The ComboBox control you want to add items to.

    .PARAMETER  Items
        The object or objects you wish to load into the ComboBox's Items collection.

    .PARAMETER  DisplayMember
        Indicates the property to display for the items in this control.
    
    .PARAMETER  Append
        Adds the item(s) to the ComboBox without clearing the Items collection.
#>
    Param (
        [Parameter(Mandatory=$true)]
        [System.Windows.Forms.ComboBox]$ComboBox,
        [Parameter(Mandatory=$true)]
        $Items,
        [Parameter(Mandatory=$false)]
        [string]$DisplayMember,
        [switch]$Append
    )
    
    if(-not $Append)
    {
        $comboBox.Items.Clear()    
    }
    
    if($Items -is [Array])
    {
        $comboBox.Items.AddRange($Items)
    }
    else
    {
        $comboBox.Items.Add($Items)    
    }

    $comboBox.DisplayMember = $DisplayMember    
} #End Function Load-ComboBox

Function Load-PSModule{
	Param([string]$name)

	if(-not(Get-Module -name $name))
	{
		if(Get-Module -ListAvailable |
		Where-Object { $_.name -eq $name })
		{
		$statusBar.Text = "Loading module " + $name
		Import-Module -Name $name
		return $true
	} #end if module available then import
	else {
		$statusBar.Text = "Module not available"
		return $false
		} #module not available
	} # end if not module
	else { 
	$statusBar.Text = "Module already loaded"
	return $true 
	} #module already loaded
	} #end function Load-PSModule

function Select-FileDialog {
	#Opens a file dialog box for selecting an input file
	param([string]$Title,[string]$Directory,[string]$Filter="CSV files (*.csv)|*.csv")
	[System.Reflection.Assembly]::LoadWithPartialName("System.Windows.Forms") | Out-Null
	$Form1 = New-Object System.Windows.Forms.OpenFileDialog
	$Form1.InitialDirectory = $Directory
	$Form1.Filter = $Filter
	$Form1.Title = $Title
	$Form1.ShowHelp = $true
	
	$Show = $Form1.ShowDialog()
	
	If ($Show -eq "OK")
	{
		Return $Form1.FileName
	}
	Else
	{
		Return $null
	}
}

function Check-InputBox{
if($inputBox.text -eq ""){
return $false
}
else{
return $true
}
}

function Check-ListBox{
if($ListBox.text -eq ""){
return $false
}
else{
return $true
}
}

function Load-List{
	if($listBox.Text -eq ""){
			$statusBar.Text = "Nothing to look up!"
		}
	else{
#		$server= $DCBox.Text
#		if($server -eq ""){
			#$list = Get-ADGroup -Filter {name -eq $listBox.Text} -Properties authOrig,unAuthOrig,dlMemSubmitPerms,dlMemRejectPerms,managedby
			$list = get-object -dg
#			}
#		else{
			#$list = Get-ADGroup -Filter {name -eq $listBox.Text} -Properties authOrig,unAuthOrig,dlMemSubmitPerms,dlMemRejectPerms,managedby -server ($server).trim()
			
#			}
		
		$UAllowBox.Text = ($list.authOrig -replace "(CN=)(.*?),.*",'$2' | Out-String )
		$UBlockBox.Text = ($list.unAuthOrig -replace "(CN=)(.*?),.*",'$2' | Out-String )
		$GAllowBox.Text = ($list.dlMemSubmitPerms -replace "(CN=)(.*?),.*",'$2' | Out-String )
		$GBlockBox.Text = ($list.dlMemRejectPerms -replace "(CN=)(.*?),.*",'$2' | Out-String )
		$ownerBox.Text = ($list.managedby -replace "(CN=)(.*?),.*",'$2' | Out-String )
		$statusBar.Text = $listBox.Text + " loaded!"
		
		}
}
#endregion functions

#region button actions

$fetchButton_OnClick= 
{
$Global:ADmod = Load-psmodule "activedirectory"
Load-List
}

$checkButton_OnClick= 
{
if($InputBox.Text -eq ""){
$statusBar.Text = "Nothing to check!"
}#endif
else{
	$global:ToAdd = get-object
	$global:ToAdd | foreach { 
		if($_.objectclass -eq "user"){
			$inputBox.AppendText(($_.samaccountname + " ("+$_.displayname+")`n") )
		}#end if
		else{
			$inputBox.AppendText(($_.samaccountname + " ("+$_.name+")`n") )
		}#end else
	}#end foreach
}
}


#$checkButton_OnClick= 
#{
#
#if($InputBox.Text -eq ""){
#$statusBar.Text = "Nothing to check!"
#}#endif
#else{
#	$Global:ADmod = Load-psmodule "activedirectory"
#	$input = $inputBox.Text.split('',[System.StringSplitOptions]::RemoveEmptyEntries)
#	$inputBox.Clear()
#	$global:ToAdd=@()
#	$server= $DCBox.Text
#		if($server -eq ""){
#			try{
#				foreach($object in $input){
#					$props = Get-ADObject -Filter {samaccountname -eq $object} -Properties distinguishedName,name,displayname,samaccountname,objectclass
#					$properties = New-Object psobject
#					$properties | Add-Member NoteProperty "distinguishedName" ($props.distinguishedName)
#					$properties | Add-Member NoteProperty "name" ($props.name)
#					$properties | Add-Member NoteProperty "displayname" ($props.displayname)
#					$properties | Add-Member NoteProperty "samaccountname" ($props.samaccountname)
#					$properties | Add-Member NoteProperty "objectclass" ($props.objectclass -replace "(CN=)(.*?),.*",'$2')
#					$global:ToAdd += $properties
#					}#end foreach
#				}#end try
#			catch{
#				[System.Windows.Forms.MessageBox]::Show($Error[0], "Error",[Windows.Forms.MessageBoxButtons]::OK, [Windows.Forms.MessageBoxIcon]::Error )
#				}#end catch
#			finally{
#				$global:ToAdd | foreach { 
#					if($_.objectclass -eq "user"){
#						$inputBox.AppendText(($_.samaccountname + " ("+$_.displayname+")`n") )
#						}#end if
#					else{
#						$inputBox.AppendText(($_.samaccountname + " ("+$_.name+")`n") )
#						}#end else
#					}#end foreach
#				}#end finally
#		}#end if
#		else{
#			try{
#				foreach($object in $input){
#					$props = Get-ADObject -Filter {samaccountname -eq $object} -Properties distinguishedName,name,displayname,samaccountname,objectclass -Server ($server).Trim()
#					$properties = New-Object psobject
#					$properties | Add-Member NoteProperty "distinguishedName" ($props.distinguishedName)
#					$properties | Add-Member NoteProperty "name" ($props.name)
#					$properties | Add-Member NoteProperty "displayname" ($props.displayname)
#					$properties | Add-Member NoteProperty "samaccountname" ($props.samaccountname)
#					$properties | Add-Member NoteProperty "objectclass" ($props.objectclass -replace "(CN=)(.*?),.*",'$2')
#					$global:ToAdd += $properties
#					}#end foreach
#				}#end try
#			catch{
#				[System.Windows.Forms.MessageBox]::Show($Error[0], "Error",[Windows.Forms.MessageBoxButtons]::OK, [Windows.Forms.MessageBoxIcon]::Error )
#				}#end catch
#			finally{
#			
#				$global:ToAdd | foreach { 
#					if($_.objectclass -eq "user"){
#						$inputBox.AppendText(($_.samaccountname + " ("+$_.displayname+")`n") )
#					}#end if
#					else{
#						$inputBox.AppendText(($_.samaccountname + " ("+$_.name+")`n") )
#					}#end else
#				}#end foreach
#			}#end finally
#				
#		}#end else		
#		$sam = $global:ToAdd | Select samaccountname -ExpandProperty samaccountname
#		$statusBar.Text = ($sam + " verified.")
#		$sam = $null	
#}#end else	
#
#}

$AddUserAllowButton_OnClick= 
{
	if(((Check-InputBox) -eq $true) -and ((Check-Listbox) -eq $true)){
		$global:ToAdd | foreach{ 
			if($_.objectclass -eq "user"){
				Set-ADGroup $ListBox.Text -Add @{authOrig = ($_.distinguishedName)}}
			else{
				[System.Windows.Forms.MessageBox]::Show(($_.samaccountname + " not added. This is not a user, you can only add users to this list."), "Error",[Windows.Forms.MessageBoxButtons]::OK, [Windows.Forms.MessageBoxIcon]::Error )
				}
			}
		$statusBar.Text = ($global:ToAdd.samaccountname + " added. Reloading list")
		Load-List
		$inputBox.Clear()
	}
	elseif(((Check-InputBox) -eq $false) -and ((Check-Listbox) -eq $true)){
		$statusBar.Text = "Nothing to add!"
		}
	elseif(((Check-InputBox) -eq $true) -and ((Check-Listbox) -eq $false)){
		$statusBar.Text = "Listbox is empty!"
		}
	else{
	$statusBar.Text = "Are you testing me?"
	}
}

$AddUserBlockButton_OnClick= 
{
	if(((Check-InputBox) -eq $true) -and ((Check-Listbox) -eq $true)){
		$global:ToAdd | foreach{ 
			if($_.objectclass -eq "user"){
				Set-ADGroup $ListBox.Text -Add @{unAuthOrig = ($_.distinguishedName)}}
			else{
				[System.Windows.Forms.MessageBox]::Show(($_.samaccountname + " not added. This is not a user, you can only add users to this list."), "Error",[Windows.Forms.MessageBoxButtons]::OK, [Windows.Forms.MessageBoxIcon]::Error )
				}
			}
		$statusBar.Text = ($global:ToAdd.samaccountname + " added. Reloading list")
		Load-List
		$inputBox.Clear()
	}
	elseif(((Check-InputBox) -eq $false) -and ((Check-Listbox) -eq $true)){
		$statusBar.Text = "Nothing to add!"
		}
	elseif(((Check-InputBox) -eq $true) -and ((Check-Listbox) -eq $false)){
		$statusBar.Text = "Listbox is empty!"
		}
	else{
	$statusBar.Text = "Are you testing me?"
	}

}

$AddGroupAllowButton_OnClick= 
{
	if(((Check-InputBox) -eq $true) -and ((Check-Listbox) -eq $true)){
		$global:ToAdd | foreach{ 
			if($_.objectclass -eq "Group"){
				Set-ADGroup $ListBox.Text -Add @{dlMemSubmitPerms = ($_.distinguishedName)}}
			else{
				[System.Windows.Forms.MessageBox]::Show(($_.samaccountname + " not added. This is not a group, you can only add groups to this list."), "Error",[Windows.Forms.MessageBoxButtons]::OK, [Windows.Forms.MessageBoxIcon]::Error )
				}
			}
		$statusBar.Text = ($global:ToAdd.samaccountname + " added. Reloading list")
		Load-List
		$inputBox.Clear()
	}
	elseif(((Check-InputBox) -eq $false) -and ((Check-Listbox) -eq $true)){
		$statusBar.Text = "Nothing to add!"
		}
	elseif(((Check-InputBox) -eq $true) -and ((Check-Listbox) -eq $false)){
		$statusBar.Text = "Listbox is empty!"
		}
	else{
	$statusBar.Text = "Are you testing me?"
	}

}

$AddgroupBlockButton_OnClick= 
{
	if(((Check-InputBox) -eq $true) -and ((Check-Listbox) -eq $true)){
		$global:ToAdd | foreach{ 
			if($_.objectclass -eq "Group"){
				Set-ADGroup $ListBox.Text -Add @{dlMemRejectPerms = ($_.distinguishedName)}}
			else{
				[System.Windows.Forms.MessageBox]::Show(($_.samaccountname + " not added. This is not a group, you can only add groups to this list."), "Error",[Windows.Forms.MessageBoxButtons]::OK, [Windows.Forms.MessageBoxIcon]::Error )
				}
			}
		$statusBar.Text = ($global:ToAdd.samaccountname + " added. Reloading list")
		Load-List
		$inputBox.Clear()
	}
	elseif(((Check-InputBox) -eq $false) -and ((Check-Listbox) -eq $true)){
		$statusBar.Text = "Nothing to add!"
		}
	elseif(((Check-InputBox) -eq $true) -and ((Check-Listbox) -eq $false)){
		$statusBar.Text = "Listbox is empty!"
		}
	else{
	$statusBar.Text = "Are you testing me?"
	}

}

$RemUserAllowButton_OnClick= 
{
	if(((Check-InputBox) -eq $true) -and ((Check-Listbox) -eq $true)){
		$global:ToAdd | foreach{ Set-ADGroup $ListBox.Text -Remove @{authOrig = ($_.distinguishedName)}}
		$statusBar.Text = ($global:ToAdd.samaccountname + " removed. Reloading list")
		Load-List
		$inputBox.Clear()
	}
	elseif(((Check-InputBox) -eq $false) -and ((Check-Listbox) -eq $true)){
		$statusBar.Text = "Nothing to remove!"
		}
	elseif(((Check-InputBox) -eq $true) -and ((Check-Listbox) -eq $false)){
		$statusBar.Text = "Listbox is empty!"
		}
	else{
	$statusBar.Text = "Are you testing me?"
	}
}

$RemUserBlockButton_OnClick= 
{
	if(((Check-InputBox) -eq $true) -and ((Check-Listbox) -eq $true)){
		$global:ToAdd | foreach{ Set-ADGroup $ListBox.Text -Remove @{unAuthOrig = ($_.distinguishedName)}}
		$statusBar.Text = ($global:ToAdd.samaccountname + " added. Reloading list")
		Load-List
		$inputBox.Clear()
	}
	elseif(((Check-InputBox) -eq $false) -and ((Check-Listbox) -eq $true)){
		$statusBar.Text = "Nothing to add!"
		}
	elseif(((Check-InputBox) -eq $true) -and ((Check-Listbox) -eq $false)){
		$statusBar.Text = "Listbox is empty!"
		}
	else{
	$statusBar.Text = "Are you testing me?"
	}

}

$RemGroupAllowButton_OnClick= 
{
	if(((Check-InputBox) -eq $true) -and ((Check-Listbox) -eq $true)){
		$global:ToAdd | foreach{ Set-ADGroup $ListBox.Text -Remove @{dlMemSubmitPerms = ($_.distinguishedName)}}
		$statusBar.Text = ($global:ToAdd.samaccountname + " added. Reloading list")
		Load-List
		$inputBox.Clear()
	}
	elseif(((Check-InputBox) -eq $false) -and ((Check-Listbox) -eq $true)){
		$statusBar.Text = "Nothing to add!"
		}
	elseif(((Check-InputBox) -eq $true) -and ((Check-Listbox) -eq $false)){
		$statusBar.Text = "Listbox is empty!"
		}
	else{
	$statusBar.Text = "Are you testing me?"
	}

}

$RemGroupBlockButton_OnClick= 
{
	if(((Check-InputBox) -eq $true) -and ((Check-Listbox) -eq $true)){
		$global:ToAdd | foreach{ Set-ADGroup $ListBox.Text -Remove @{dlMemRejectPerms = ($_.distinguishedName)}}
		$statusBar.Text = ($global:ToAdd.samaccountname + " added. Reloading list")
		Load-List
		$inputBox.Clear()
	}
	elseif(((Check-InputBox) -eq $false) -and ((Check-Listbox) -eq $true)){
		$statusBar.Text = "Nothing to add!"
		}
	elseif(((Check-InputBox) -eq $true) -and ((Check-Listbox) -eq $false)){
		$statusBar.Text = "Listbox is empty!"
		}
	else{
	$statusBar.Text = "Are you testing me?"
	}

}


$handler_form1_Load= 
{
#TODO: Place custom script here

}

$DCButton_OnClick=
{
$domain = [System.DirectoryServices.ActiveDirectory.Domain]::GetCurrentDomain()
	#$DomainDN = ($(([adsisearcher]"").Searchroot.path)).Replace("LDAP://","")
#	if(($LDAPBox.text) -eq ""){
#	$LDAPBox.Text = $domainDN  | Out-String
#	}#end if
	$results = $domain.FindAllDomainControllers() | select Name
	$results | Sort-Object -Property Name | foreach {
	Load-Combobox -Combobox $DCBox -items ($_.Name | Out-String) -append
	}#end foreach
}

function OnClick_openMenuItem($Sender,$e){
	if($filepath -eq $null) {
		
		$filepath=Select-FileDialog -Title "Select an input file"
		if($filepath -ne $null){
			$inputBox.Text = $mailboxBox.Text.Clear
			$global:listToAdd = import-csv -Path $filepath
			foreach($l in $global:listToAdd){
				$inputBox.AppendText(($l.samaccountname | Out-String))
				}
			$statusBar.Text = "Data loaded from " + $filepath
	 	}
		else{
		$statusBar.Text = "No file selected"
		}
	}
}


function OnClick_usageMenuItem($Sender,$e){
    [void][System.Windows.Forms.MessageBox]::Show(($howto | Out-String),"How to use the tool")
}

function OnClick_aboutMenuItem($Sender,$e){
    [void][System.Windows.Forms.MessageBox]::Show(($about | Out-String),"About")
}

$OnLoadForm_StateCorrection=
{#Correct the initial state of the form to prevent the .Net maximized form issue
	$form1.WindowState = $InitialFormWindowState
}

#endregion button actions

#region Generated Form Code
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 575
$System_Drawing_Size.Width = 619
$form1.ClientSize = $System_Drawing_Size
$form1.DataBindings.DefaultDataSourceUpdateMode = 0
$form1.Name = "form1"
$form1.Text = "Change DG/DL attributes"
$form1.Icon = $DSMIcon
$form1.MainMenuStrip = $mainMenu
$form1.minimumSize = $System_Drawing_Size
$form1.MaximumSize = $System_Drawing_Size
$form1.StartPosition = "CenterScreen"
$form1.add_Load($handler_form1_Load)

$GBlockBox.DataBindings.DefaultDataSourceUpdateMode = 0
$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 373
$System_Drawing_Point.Y = 126
$GBlockBox.Location = $System_Drawing_Point
$GBlockBox.Name = "GBlockBox"
$GBlockBox.ReadOnly = $True
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 112
$System_Drawing_Size.Width = 100
$GBlockBox.Size = $System_Drawing_Size
$GBlockBox.TabIndex = 28
$GBlockBox.Text = ""

$form1.Controls.Add($GBlockBox)

$ownerLabel.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 490
$System_Drawing_Point.Y = 97
$ownerLabel.Location = $System_Drawing_Point
$ownerLabel.Name = "ownerLabel"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 23
$System_Drawing_Size.Width = 100
$ownerLabel.Size = $System_Drawing_Size
$ownerLabel.TabIndex = 27
$ownerLabel.Text = "Owner(s)"
$ownerLabel.TextAlign = 32

$form1.Controls.Add($ownerLabel)

$ownerBox.DataBindings.DefaultDataSourceUpdateMode = 0
$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 490
$System_Drawing_Point.Y = 126
$ownerBox.Location = $System_Drawing_Point
$ownerBox.Name = "ownerBox"
$ownerBox.ReadOnly = $True
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 112
$System_Drawing_Size.Width = 100
$ownerBox.Size = $System_Drawing_Size
$ownerBox.TabIndex = 26
$ownerBox.Text = ""

$form1.Controls.Add($ownerBox)

$inputBoxLabel.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 24
$System_Drawing_Point.Y = 255
$inputBoxLabel.Location = $System_Drawing_Point
$inputBoxLabel.Name = "inputBoxLabel"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 23
$System_Drawing_Size.Width = 302
$inputBoxLabel.Size = $System_Drawing_Size
$inputBoxLabel.TabIndex = 25
$inputBoxLabel.Text = "Input Box (check names first before adding or removing)"
$inputBoxLabel.TextAlign = 16

$form1.Controls.Add($inputBoxLabel)


$checkButton.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 450
$System_Drawing_Point.Y = 284
$checkButton.Location = $System_Drawing_Point
$checkButton.Name = "checkButton"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 23
$System_Drawing_Size.Width = 127
$checkButton.Size = $System_Drawing_Size
$checkButton.TabIndex = 24
$checkButton.Text = "Check names"
$checkButton.UseVisualStyleBackColor = $True
$checkButton.add_Click($checkButton_OnClick)

$form1.Controls.Add($checkButton)


$RemGroupBlockButton.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 202
$System_Drawing_Point.Y = 480
$RemGroupBlockButton.Location = $System_Drawing_Point
$RemGroupBlockButton.Name = "RemGroupBlockButton"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 23
$System_Drawing_Size.Width = 165
$RemGroupBlockButton.Size = $System_Drawing_Size
$RemGroupBlockButton.TabIndex = 23
$RemGroupBlockButton.Text = "Remove group from blocked"
$RemGroupBlockButton.UseVisualStyleBackColor = $True
$RemGroupBlockButton.add_Click($RemGroupBlockButton_OnClick)

$form1.Controls.Add($RemGroupBlockButton)


$RemGroupAllowButton.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 202
$System_Drawing_Point.Y = 450
$RemGroupAllowButton.Location = $System_Drawing_Point
$RemGroupAllowButton.Name = "RemGroupAllowButton"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 23
$System_Drawing_Size.Width = 165
$RemGroupAllowButton.Size = $System_Drawing_Size
$RemGroupAllowButton.TabIndex = 22
$RemGroupAllowButton.Text = "Remove group from allow"
$RemGroupAllowButton.UseVisualStyleBackColor = $True
$RemGroupAllowButton.add_Click($RemGroupAllowButton_OnClick)

$form1.Controls.Add($RemGroupAllowButton)


$RemUserBlockButton.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 202
$System_Drawing_Point.Y = 421
$RemUserBlockButton.Location = $System_Drawing_Point
$RemUserBlockButton.Name = "RemUserBlockButton"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 23
$System_Drawing_Size.Width = 165
$RemUserBlockButton.Size = $System_Drawing_Size
$RemUserBlockButton.TabIndex = 21
$RemUserBlockButton.Text = "Remove user from blocked"
$RemUserBlockButton.UseVisualStyleBackColor = $True
$RemUserBlockButton.add_Click($RemUserBlockButton_OnClick)

$form1.Controls.Add($RemUserBlockButton)


$RemUserAllowButton.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 202
$System_Drawing_Point.Y = 392
$RemUserAllowButton.Location = $System_Drawing_Point
$RemUserAllowButton.Name = "RemUserAllowButton"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 23
$System_Drawing_Size.Width = 165
$RemUserAllowButton.Size = $System_Drawing_Size
$RemUserAllowButton.TabIndex = 20
$RemUserAllowButton.Text = "Remove user from allow"
$RemUserAllowButton.UseVisualStyleBackColor = $True
$RemUserAllowButton.add_Click($RemUserAllowButton_OnClick)

$form1.Controls.Add($RemUserAllowButton)


$AddgroupBlockButton.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 24
$System_Drawing_Point.Y = 480
$AddgroupBlockButton.Location = $System_Drawing_Point
$AddgroupBlockButton.Name = "AddgroupBlockButton"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 23
$System_Drawing_Size.Width = 165
$AddgroupBlockButton.Size = $System_Drawing_Size
$AddgroupBlockButton.TabIndex = 19
$AddgroupBlockButton.Text = "Add group to block"
$AddgroupBlockButton.UseVisualStyleBackColor = $True
$AddgroupBlockButton.add_Click($AddgroupBlockButton_OnClick)

$form1.Controls.Add($AddgroupBlockButton)


$AddGroupAllowButton.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 24
$System_Drawing_Point.Y = 450
$AddGroupAllowButton.Location = $System_Drawing_Point
$AddGroupAllowButton.Name = "AddGroupAllowButton"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 23
$System_Drawing_Size.Width = 165
$AddGroupAllowButton.Size = $System_Drawing_Size
$AddGroupAllowButton.TabIndex = 18
$AddGroupAllowButton.Text = "Add group to allow"
$AddGroupAllowButton.UseVisualStyleBackColor = $True
$AddGroupAllowButton.add_Click($AddGroupAllowButton_OnClick)

$form1.Controls.Add($AddGroupAllowButton)


$AddUserBlockButton.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 24
$System_Drawing_Point.Y = 421
$AddUserBlockButton.Location = $System_Drawing_Point
$AddUserBlockButton.Name = "AddUserBlockButton"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 23
$System_Drawing_Size.Width = 165
$AddUserBlockButton.Size = $System_Drawing_Size
$AddUserBlockButton.TabIndex = 17
$AddUserBlockButton.Text = "Add user to block"
$AddUserBlockButton.UseVisualStyleBackColor = $True
$AddUserBlockButton.add_Click($AddUserBlockButton_OnClick)

$form1.Controls.Add($AddUserBlockButton)


$AddUserAllowButton.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 24
$System_Drawing_Point.Y = 392
$AddUserAllowButton.Location = $System_Drawing_Point
$AddUserAllowButton.Name = "AddUserAllowButton"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 23
$System_Drawing_Size.Width = 165
$AddUserAllowButton.Size = $System_Drawing_Size
$AddUserAllowButton.TabIndex = 16
$AddUserAllowButton.Text = "Add user to allow"
$AddUserAllowButton.UseVisualStyleBackColor = $True
$AddUserAllowButton.add_Click($AddUserAllowButton_OnClick)

$form1.Controls.Add($AddUserAllowButton)

$inputBox.DataBindings.DefaultDataSourceUpdateMode = 0
$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 24
$System_Drawing_Point.Y = 284
$inputBox.Location = $System_Drawing_Point
$inputBox.Name = "inputBox"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 86
$System_Drawing_Size.Width = 400
$inputBox.Size = $System_Drawing_Size
$inputBox.TabIndex = 15
$inputBox.Text = ""

$form1.Controls.Add($inputBox)

$statusBar.DataBindings.DefaultDataSourceUpdateMode = 0
$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 0
$System_Drawing_Point.Y = 543
$statusBar.Location = $System_Drawing_Point
$statusBar.Name = "statusBar"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 22
$System_Drawing_Size.Width = 619
$statusBar.Size = $System_Drawing_Size
$statusBar.TabIndex = 14
$statusBar.Text = "Ready..."

$form1.Controls.Add($statusBar)

$GBlockLabel.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 373
$System_Drawing_Point.Y = 97
$GBlockLabel.Location = $System_Drawing_Point
$GBlockLabel.Name = "GBlockLabel"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 23
$System_Drawing_Size.Width = 100
$GBlockLabel.Size = $System_Drawing_Size
$GBlockLabel.TabIndex = 9
$GBlockLabel.Text = "Blocked groups"
$GBlockLabel.TextAlign = 32

$form1.Controls.Add($GBlockLabel)

$GAllowLabel.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 256
$System_Drawing_Point.Y = 97
$GAllowLabel.Location = $System_Drawing_Point
$GAllowLabel.Name = "GAllowLabel"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 23
$System_Drawing_Size.Width = 100
$GAllowLabel.Size = $System_Drawing_Size
$GAllowLabel.TabIndex = 8
$GAllowLabel.Text = "Allowed groups"
$GAllowLabel.TextAlign = 32

$form1.Controls.Add($GAllowLabel)

$UBlockLabel.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 139
$System_Drawing_Point.Y = 97
$UBlockLabel.Location = $System_Drawing_Point
$UBlockLabel.Name = "UBlockLabel"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 23
$System_Drawing_Size.Width = 100
$UBlockLabel.Size = $System_Drawing_Size
$UBlockLabel.TabIndex = 7
$UBlockLabel.Text = "Blocked to send"
$UBlockLabel.TextAlign = 32

$form1.Controls.Add($UBlockLabel)

$UAllowLabel.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 24
$System_Drawing_Point.Y = 97
$UAllowLabel.Location = $System_Drawing_Point
$UAllowLabel.Name = "UAllowLabel"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 23
$System_Drawing_Size.Width = 100
$UAllowLabel.Size = $System_Drawing_Size
$UAllowLabel.TabIndex = 6
$UAllowLabel.Text = "Allowed to send"
$UAllowLabel.TextAlign = 32
$UAllowLabel.add_Click($handler_label1_Click)

$form1.Controls.Add($UAllowLabel)

$GAllowBox.DataBindings.DefaultDataSourceUpdateMode = 0
$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 256
$System_Drawing_Point.Y = 126
$GAllowBox.Location = $System_Drawing_Point
$GAllowBox.Name = "GAllowBox"
$GAllowBox.ReadOnly = $True
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 112
$System_Drawing_Size.Width = 100
$GAllowBox.Size = $System_Drawing_Size
$GAllowBox.TabIndex = 4
$GAllowBox.Text = ""

$form1.Controls.Add($GAllowBox)

$UBlockBox.DataBindings.DefaultDataSourceUpdateMode = 0
$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 139
$System_Drawing_Point.Y = 126
$UBlockBox.Location = $System_Drawing_Point
$UBlockBox.Name = "UBlockBox"
$UBlockBox.ReadOnly = $True
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 112
$System_Drawing_Size.Width = 100
$UBlockBox.Size = $System_Drawing_Size
$UBlockBox.TabIndex = 3
$UBlockBox.Text = ""

$form1.Controls.Add($UBlockBox)

$UAllowBox.DataBindings.DefaultDataSourceUpdateMode = 0
$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 24
$System_Drawing_Point.Y = 126
$UAllowBox.Location = $System_Drawing_Point
$UAllowBox.Name = "UAllowBox"
$UAllowBox.ReadOnly = $True
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 112
$System_Drawing_Size.Width = 100
$UAllowBox.Size = $System_Drawing_Size
$UAllowBox.TabIndex = 2
$UAllowBox.Text = ""

$form1.Controls.Add($UAllowBox)


$fetchButton.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 300
$System_Drawing_Point.Y = 56
$fetchButton.Location = $System_Drawing_Point
$fetchButton.Name = "fetchButton"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 20
$System_Drawing_Size.Width = 128
$fetchButton.Size = $System_Drawing_Size
$fetchButton.TabIndex = 1
$fetchButton.Text = "Fetch list"
$fetchButton.UseVisualStyleBackColor = $True
$fetchButton.add_Click($fetchButton_OnClick)

$form1.Controls.Add($fetchButton)

$listBox.DataBindings.DefaultDataSourceUpdateMode = 0
$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 24
$System_Drawing_Point.Y = 56
$listBox.Location = $System_Drawing_Point
$listBox.Name = "listBox"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 20
$System_Drawing_Size.Width = 270
$listBox.Size = $System_Drawing_Size
$listBox.TabIndex = 0

$form1.Controls.Add($listBox)

#
# Mainmenu
#
$mainMenu.Items.AddRange(@(
$fileMenuItem,$helpMenuItem))
$mainMenu.Location = new-object System.Drawing.Point(0, 0)
$mainMenu.Name = "$mainMenu"
$mainMenu.Size = new-object System.Drawing.Size(488, 24)
$mainMenu.TabIndex = 0
$mainMenu.Text = "mainMenu"

$form1.Controls.Add($mainMenu)
#
# fileMenuItem
#
$fileMenuItem.DropDownItems.AddRange(@(
$openMenuItem))
$fileMenuItem.Name = "$fileMenuItem"
$fileMenuItem.Size = new-object System.Drawing.Size(35, 20)
$fileMenuItem.Text = "&File"
#
# openMenuItem
#
$openMenuItem.Name = "$openMenuItem"
$openMenuItem.Size = new-object System.Drawing.Size(152, 22)
$openMenuItem.Text = "&Open"
$openMenuItem.Add_Click( { OnClick_openMenuItem $openMenuItem $EventArgs} )
# openMenuItem
#
$helpMenuItem.DropDownItems.AddRange(@(
$usageMenuItem,$aboutMenuItem))
$helpMenuItem.Name = "$helpMenuItem"
$helpMenuItem.Size = new-object System.Drawing.Size(152, 22)
$helpMenuItem.Text = "&Help"
#
# openMenuItem
#
$usageMenuItem.Name = "$usageMenuItem"
$usageMenuItem.Size = new-object System.Drawing.Size(152, 22)
$usageMenuItem.Text = "&How to use the tool"
$usageMenuItem.Add_Click( { OnClick_usageMenuItem $usageMenuItem $EventArgs} )
#
# openMenuItem
#
$aboutMenuItem.Name = "$aboutMenuItem"
$aboutMenuItem.Size = new-object System.Drawing.Size(152, 22)
$aboutMenuItem.Text = "&About"
$aboutMenuItem.Add_Click( { OnClick_aboutMenuItem $aboutMenuItem $EventArgs} )

$DCBox.Location = New-Object System.Drawing.Point(24, 30)
$DCBox.Size = New-Object System.Drawing.Size(270, 23)

$form1.Controls.Add($DCBox)

$DCButton.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 300
$System_Drawing_Point.Y = 30
$DCButton.Location = $System_Drawing_Point
$DCButton.Name = "$DCButton"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 20
$System_Drawing_Size.Width = 128
$DCButton.Size = $System_Drawing_Size
$DCButton.TabIndex = 1
$DCButton.Text = "Fetch DC's"
$DCButton.UseVisualStyleBackColor = $True
$DCButton.add_Click($DCButton_OnClick)

$form1.Controls.Add($DCButton)

#endregion Generated Form Code

#Save the initial state of the form
$InitialFormWindowState = $form1.WindowState
#Init the OnLoad event to correct the initial state of the form
$form1.add_Load($OnLoadForm_StateCorrection)
#Show the Form
$form1.ShowDialog()| Out-Null

} #End Function

#Call the Function
GenerateForm
